version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres-dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web Console
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    # networks:
    # - app-network
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-dev
    restart: always
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      GROQ_API_KEY: ${GROQ_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - minio
  
  frontend:
    build: 
      context: ./posing-clinic-frontend
      dockerfile: Dockerfile
    container_name: frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./posing-clinic-frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000  # Changed from backend:8000
    networks:
      - app-network

volumes:
  pgdata:
  minio-data:

networks:
  app-network:
    driver: bridge
